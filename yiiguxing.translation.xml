<application>
  <component name="AppStorage">
    <histories>
      <item value="builder" />
      <item value="has Sifting Panel Value" />
      <item value="keywords" />
      <item value="folder" />
      <item value="Exporter" />
      <item value="Dfs Exporter Task" />
      <item value="Returns a {@code BigDecimal} whose scale is the specified value, and whose unscaled value is determined by multiplying or dividing this {@code BigDecimal}'s unscaled value by the appropriate power of ten to maintain its overall value. If the scale is reduced by the operation, the unscaled value must be divided (rather than multiplied), and the value may be changed; in this case, the specified rounding mode is applied to the division. @apiNote Since BigDecimal objects are immutable, calls of this method do &lt;em&gt;not&lt;em&gt; result in the original object being modified, contrary to the usual convention of having methods named &lt;code&gt;set&lt;i&gt;X&lt;i&gt;&lt;code&gt; mutate field &lt;i&gt;{@code X}&lt;i&gt;. Instead, {@code setScale} returns an object with the proper scale; the returned object may or may not be newly allocated. @deprecated The method {@link setScale(int, RoundingMode)} should be used in preference to this legacy method. @param newScale scale of the {@code BigDecimal} value to be returned. @param roundingMode The rounding mode to apply. @return a {@code BigDecimal} whose scale is the specified value, and whose unscaled value is determined by multiplying or dividing this {@code BigDecimal}'s unscaled value by the appropriate power of ten to maintain its overall value. @throws ArithmeticException if {@code roundingMode==ROUND_UNNECESSARY} and the specified scaling operation would require rounding. @throws IllegalArgumentException if {@code roundingMode} does not represent a valid rounding mode." />
      <item value="adapte Value" />
      <item value="adapter Value" />
      <item value="labor Work" />
      <item value="sender Preview File" />
      <item value="Points Channel" />
      <item value="Channel" />
      <item value="set Sum With Delta" />
      <item value="已获得的积分" />
      <item value="channel" />
      <item value="filter" />
      <item value="qps Exclude Url" />
      <item value="minus Seconds" />
      <item value="schedule With Fixed Delay" />
      <item value="schedule At Fixed Rate" />
      <item value="轮盘" />
      <item value="转盘" />
      <item value="Count Down Latch" />
      <item value="credit" />
      <item value="计入" />
      <item value="时间片" />
      <item value="Rolling Number" />
      <item value="转轮" />
      <item value="counter" />
      <item value="One or more variables that together maintain an initially zero {@code long} sum. When updates (method {@link add}) are contended across threads, the set of variables may grow dynamically to reduce contention. Method {@link sum} (or, equivalently, {@link longValue}) returns the current total combined across the variables maintaining the sum. &lt;p&gt;This class is usually preferable to {@link AtomicLong} when multiple threads update a common sum that is used for purposes such as collecting statistics, not for fine-grained synchronization control. Under low update contention, the two classes have similar characteristics. But under high contention, expected throughput of this class is significantly higher, at the expense of higher space consumption. &lt;p&gt;LongAdders can be used with a {@link java.util.concurrent.ConcurrentHashMap} to maintain a scalable frequency map (a form of histogram or multiset). For example, to add a count to a {@code ConcurrentHashMap&lt;String,LongAdder&gt; freqs}, initializing if not already present, you can use {@code freqs.computeIfAbsent(k -&gt; new LongAdder()).increment();} &lt;p&gt;This class extends {@link Number}, but does &lt;em&gt;not&lt;em&gt; define methods such as {@code equals}, {@code hashCode} and {@code compareTo} because instances are expected to be mutated, and so are not useful as collection keys. @since 1.8 @author Doug Lea" />
      <item value="Bucket" />
      <item value="start Learn" />
      <item value="同步请求次数" />
      <item value="duration" />
      <item value="spent Time" />
      <item value="enable" />
      <item value="enabled" />
      <item value="executor Minutes" />
      <item value="label" />
      <item value="Labor Work Repair Data Ctrl" />
      <item value="event Collect" />
      <item value="exist" />
      <item value="check Is Inited" />
      <item value="username" />
      <item value="time Period" />
      <item value="互相批阅数" />
      <item value="学习时长" />
      <item value="avatar" />
      <item value="yield" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="161" />
        <entry key="ENGLISH" value="162" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1626077312088" />
  </component>
</application>